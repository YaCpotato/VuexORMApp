{"remainingRequest":"/Users/yashiroshoichi/oden/VuexORMApp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yashiroshoichi/oden/VuexORMApp/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yashiroshoichi/oden/VuexORMApp/src/App.vue","mtime":1616837661651},{"path":"/Users/yashiroshoichi/oden/VuexORMApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yashiroshoichi/oden/VuexORMApp/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yashiroshoichi/oden/VuexORMApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yashiroshoichi/oden/VuexORMApp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from 'vue'\nimport './store'\nimport Task from './model/Task'\nimport Current from './model/Current'\nimport draggable from 'vuedraggable'\nimport VModal from 'vue-js-modal'\nVue.use(VModal)\n\nexport default{\n  components: {\n    draggable,\n  },\n  data(){\n    return {\n      ToDos:[],\n      WorkInProgress:[],\n      Dones:[],\n      wantToDos:[],\n      wantWorkInProgress:[],\n      wantDones:[],\n      project: [{\n        'id': null,\n        'name': '',\n        'day': ''\n      }],\n      task: [{\n        'id': null,\n        'project_id': null,\n        'name': '',\n        'phase': null,\n        'want': false\n      }],\n      assigntask: {\n        'name': ''\n      }\n    }\n  },\n  methods: {\n    Initialize:function(){\n      this.task = Task.query().where('project_id',this.project.id).get()\n      this.ToDos = []\n      this.WorkInProgress = []\n      this.Dones = []\n      this.wantToDos = []\n      this.wantWorkInProgress = []\n      this.wantDones =[]\n      for(let i=0;i<this.task.length;i++){\n        if(this.task[i].phase == 0 && !this.task[i].want){\n          this.ToDos.push({\n            'id': this.task[i].id,\n            'project_id': this.task[i].project_id,\n            'name': this.task[i].name,\n            'want': this.task[i].want\n          })\n        }else if(this.task[i].phase == 0 && this.task[i].want){\n          this.wantToDos.push({\n            'id': this.task[i].id,\n            'project_id': this.task[i].project_id,\n            'name': this.task[i].name,\n            'want': this.task[i].want\n          })\n        }else if(this.task[i].phase == 1 && !this.task[i].want){\n          this.WorkInProgress.push({\n            'id': this.task[i].id,\n            'project_id': this.task[i].project_id,\n            'name': this.task[i].name,\n            'want': this.task[i].want\n          })\n        }else if(this.task[i].phase == 1 && this.task[i].want){\n          this.wantWorkInProgress.push({\n            'id': this.task[i].id,\n            'project_id': this.task[i].project_id,\n            'name': this.task[i].name,\n            'want': this.task[i].want\n          })\n        }else if(this.task[i].phase == 2 && !this.task[i].want){\n          this.Dones.push({\n            'id': this.task[i].id,\n            'project_id': this.task[i].project_id,\n            'name': this.task[i].name,\n            'want': this.task[i].want\n          })\n        }else if(this.task[i].phase == 2 && this.task[i].want){\n          this.wantDones.push({\n            'id': this.task[i].id,\n            'project_id': this.task[i].project_id,\n            'name': this.task[i].name,\n            'want': this.task[i].want\n          })\n        }\n      }\n    },\n    addTask: function(){\n      Task.insert({\n        data: {\n          'project_id': this.project.id,\n          'name': this.assigntask.name,\n          'phase': 0,\n        }\n      })\n      this.Initialize()\n    },\n    updateToDo:function(){\n      for(let i=0;i<this.ToDos.length;i++){\n        Task.update({\n          data:{\n            id: this.ToDos[i].id,\n            phase:0\n          }\n        })\n      }\n    },\n    updateWiP:function(){\n      for(let i=0;i<this.WorkInProgress.length;i++){\n        Task.update({\n          data:{\n            id: this.WorkInProgress[i].id,\n            phase:1\n          }\n        })\n      }\n    },\n    updateDone:function(){\n      for(let i=0;i<this.Dones.length;i++){\n        Task.update({\n          data:{\n            id: this.Dones[i].id,\n            phase:2\n          }\n        })\n      }\n    },\n    updatewantToDo:function(){\n      for(let i=0;i<this.wantToDos.length;i++){\n        Task.update({\n          data:{\n            id: this.wantToDos[i].id,\n            phase:0\n          }\n        })\n      }\n    },\n    updatewantWiP:function(){\n      for(let i=0;i<this.wantWorkInProgress.length;i++){\n        Task.update({\n          data:{\n            id: this.wantWorkInProgress[i].id,\n            phase:1\n          }\n        })\n      }\n    },\n    updatewantDone:function(){\n      for(let i=0;i<this.wantDones.length;i++){\n        Task.update({\n          data:{\n            id: this.wantDones[i].id,\n            phase:2\n          }\n        })\n      }\n    }\n  },\n  created:function(){\n      let result = Current.all()\n      this.$set(this.project,'id',result[0].id)\n      this.$set(this.project,'name',result[0].name)\n      this.$set(this.project,'day',result[0].day)\n      this.Initialize()\n    }\n  }\n\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app2\">\n    <h2>{{ project.name }}</h2>\n    <h3>{{ project.id }}</h3>\n    <h3>{{ project.day }}</h3>\n    <p><el-input type=\"text\" v-model=\"assigntask.name\"></el-input>\n    <el-button @click=\"addTask\">タスク追加</el-button></p>\n    \n    <div id=\"box1\" class=\"box\">\n    <ul>\n      <span class=\"tag todo\">To Do</span>\n      <draggable class=\"dragarea\" :options=\"{group:'ITEMS'}\" v-model=\"ToDos\" @change=\"updateToDo\">\n        <el-tag type=\"danger\" effect=\"dark\" v-for=\"(ToDo,id) in ToDos\" :key=\"id\">{{ ToDo.name }}</el-tag>\n      </draggable>\n      <span class=\"tag todo\">Want</span>\n      <draggable class=\"dragarea\" :options=\"{group:'ITEMS'}\" v-model=\"wantToDos\" @change=\"updatewantToDo\">\n        <el-tag type=\"danger\" effect=\"dark\" v-for=\"(wantToDo,id) in wantToDos\" :key=\"id\">{{ wantToDo.name }}</el-tag>\n      </draggable>\n    </ul>\n  </div>\n\n  <div id=\"box2\" class=\"box\">\n    <ul>\n      <span class=\"tag wip\">WorkInProgress</span>\n      <draggable class=\"dragarea\" :options=\"{group:'ITEMS'}\" v-model=\"WorkInProgress\" @change=\"updateWiP\">\n        <el-tag type=\"warning\" effect=\"dark\" v-for=\"(WiP,id) in WorkInProgress\" :key=\"id\">{{ WiP.name }}</el-tag>\n       </draggable>\n       <span class=\"tag wip\">Want</span>\n      <draggable class=\"dragarea\" :options=\"{group:'ITEMS'}\" v-model=\"wantWorkInProgress\" @change=\"updatewantWiP\">\n        <el-tag type=\"warning\" effect=\"dark\" v-for=\"(wantWiP,id) in wantWorkInProgress\" :key=\"id\">{{ wantWiP.name }}</el-tag>\n      </draggable>\n    </ul>\n  </div>\n\n  <div id=\"box3\" class=\"box\">\n    <ul>\n      <span class=\"tag done\">Done</span>\n      <draggable class=\"dragarea\" :options=\"{group:'ITEMS'}\" v-model=\"Dones\" @change=\"updateDone\">\n          <el-tag type=\"success\" effect=\"dark\" v-for=\"(Done,id) in Dones\" :key=\"id\">{{ Done.name }}</el-tag>\n      </draggable>\n      <span class=\"tag done\">Want</span>\n      <draggable class=\"dragarea\" :options=\"{group:'ITEMS'}\" v-model=\"wantDones\" @change=\"updatewantDone\">\n        <el-tag type=\"success\" effect=\"dark\" v-for=\"(wantDone,id) in wantDones\" :key=\"id\">{{ wantDone.name }}</el-tag>\n      </draggable>\n    </ul>\n  </div>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue'\nimport './store'\nimport Task from './model/Task'\nimport Current from './model/Current'\nimport draggable from 'vuedraggable'\nimport VModal from 'vue-js-modal'\nVue.use(VModal)\n\nexport default{\n  components: {\n    draggable,\n  },\n  data(){\n    return {\n      ToDos:[],\n      WorkInProgress:[],\n      Dones:[],\n      wantToDos:[],\n      wantWorkInProgress:[],\n      wantDones:[],\n      project: [{\n        'id': null,\n        'name': '',\n        'day': ''\n      }],\n      task: [{\n        'id': null,\n        'project_id': null,\n        'name': '',\n        'phase': null,\n        'want': false\n      }],\n      assigntask: {\n        'name': ''\n      }\n    }\n  },\n  methods: {\n    Initialize:function(){\n      this.task = Task.query().where('project_id',this.project.id).get()\n      this.ToDos = []\n      this.WorkInProgress = []\n      this.Dones = []\n      this.wantToDos = []\n      this.wantWorkInProgress = []\n      this.wantDones =[]\n      for(let i=0;i<this.task.length;i++){\n        if(this.task[i].phase == 0 && !this.task[i].want){\n          this.ToDos.push({\n            'id': this.task[i].id,\n            'project_id': this.task[i].project_id,\n            'name': this.task[i].name,\n            'want': this.task[i].want\n          })\n        }else if(this.task[i].phase == 0 && this.task[i].want){\n          this.wantToDos.push({\n            'id': this.task[i].id,\n            'project_id': this.task[i].project_id,\n            'name': this.task[i].name,\n            'want': this.task[i].want\n          })\n        }else if(this.task[i].phase == 1 && !this.task[i].want){\n          this.WorkInProgress.push({\n            'id': this.task[i].id,\n            'project_id': this.task[i].project_id,\n            'name': this.task[i].name,\n            'want': this.task[i].want\n          })\n        }else if(this.task[i].phase == 1 && this.task[i].want){\n          this.wantWorkInProgress.push({\n            'id': this.task[i].id,\n            'project_id': this.task[i].project_id,\n            'name': this.task[i].name,\n            'want': this.task[i].want\n          })\n        }else if(this.task[i].phase == 2 && !this.task[i].want){\n          this.Dones.push({\n            'id': this.task[i].id,\n            'project_id': this.task[i].project_id,\n            'name': this.task[i].name,\n            'want': this.task[i].want\n          })\n        }else if(this.task[i].phase == 2 && this.task[i].want){\n          this.wantDones.push({\n            'id': this.task[i].id,\n            'project_id': this.task[i].project_id,\n            'name': this.task[i].name,\n            'want': this.task[i].want\n          })\n        }\n      }\n    },\n    addTask: function(){\n      Task.insert({\n        data: {\n          'project_id': this.project.id,\n          'name': this.assigntask.name,\n          'phase': 0,\n        }\n      })\n      this.Initialize()\n    },\n    updateToDo:function(){\n      for(let i=0;i<this.ToDos.length;i++){\n        Task.update({\n          data:{\n            id: this.ToDos[i].id,\n            phase:0\n          }\n        })\n      }\n    },\n    updateWiP:function(){\n      for(let i=0;i<this.WorkInProgress.length;i++){\n        Task.update({\n          data:{\n            id: this.WorkInProgress[i].id,\n            phase:1\n          }\n        })\n      }\n    },\n    updateDone:function(){\n      for(let i=0;i<this.Dones.length;i++){\n        Task.update({\n          data:{\n            id: this.Dones[i].id,\n            phase:2\n          }\n        })\n      }\n    },\n    updatewantToDo:function(){\n      for(let i=0;i<this.wantToDos.length;i++){\n        Task.update({\n          data:{\n            id: this.wantToDos[i].id,\n            phase:0\n          }\n        })\n      }\n    },\n    updatewantWiP:function(){\n      for(let i=0;i<this.wantWorkInProgress.length;i++){\n        Task.update({\n          data:{\n            id: this.wantWorkInProgress[i].id,\n            phase:1\n          }\n        })\n      }\n    },\n    updatewantDone:function(){\n      for(let i=0;i<this.wantDones.length;i++){\n        Task.update({\n          data:{\n            id: this.wantDones[i].id,\n            phase:2\n          }\n        })\n      }\n    }\n  },\n  created:function(){\n      let result = Current.all()\n      this.$set(this.project,'id',result[0].id)\n      this.$set(this.project,'name',result[0].name)\n      this.$set(this.project,'day',result[0].day)\n      this.Initialize()\n    }\n  }\n\n</script>\n\n<style>\n@import url('https://fonts.googleapis.com/css?family=Russo+One&display=swap');\n.el-input__inner{\n    width:40%;\n}\n\n.el-tag{\n  width:75%;\n  font-weight:bold;\n}\n\n.el-tag .el-tag__inner{\n  font-size: 30px;\n}\n\n#app {\n  font-family: 'Russo One','Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n#nav {\n  padding: 30px;\n}\n\n#nav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\n#nav a.router-link-exact-active {\n  color: #42b983;\n}\n\n.box {\n  width: 30%;\n  float: left;\n  padding: 20px 0;\n}\n#box1 {\n  border:red 5px;\n}\n#box2 {\n  background-color: #FFC7AF;\n}\n#box3 {\n  background-color: #AEFFBD;\n}\n\n.tag{\n  padding:3px;\n  font-size: 20px;\n}\n\nli {\n  cursor:pointer;\n  padding: 10px;\n  border: solid #ddd 1px;\n  background-color: #fff;\n}\n\n.dragarea{\n  width:300px;\n  height:300px;\n  border: #2c3e50;\n}\n\n</style>\n"]}]}